unit Main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, System.Win.ScktComp, Vcl.StdCtrls,
  Vcl.Buttons, Vcl.ComCtrls;

type
  TUMain = class(TForm)
    Edt_Host: TEdit;
    Label1: TLabel;
    Btn_Start: TBitBtn;
    Edt_Port: TEdit;
    Label2: TLabel;
    Client_Sock: TClientSocket;
    StatusBar_APP: TStatusBar;
    procedure Btn_StartClick(Sender: TObject);
    procedure Client_SockConnect(Sender: TObject; Socket: TCustomWinSocket);
    procedure Client_SockDisconnect(Sender: TObject; Socket: TCustomWinSocket);
    procedure Client_SockRead(Sender: TObject; Socket: TCustomWinSocket);
    procedure Client_SockError(Sender: TObject; Socket: TCustomWinSocket;
      ErrorEvent: TErrorEvent; var ErrorCode: Integer);
    procedure Client_SockConnecting(Sender: TObject; Socket: TCustomWinSocket);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  UMain: TUMain;

implementation

uses
  CMD_Dialect;

{$R *.dfm}

procedure TUMain.Btn_StartClick(Sender: TObject);
begin
 with Btn_Start do
  begin
    case Tag of
      0: begin
           Client_Sock.Port   := StrToInt(Edt_Port.Text);
           Client_Sock.Host   := (Edt_Host.Text);
           Client_Sock.Active := True;
           Caption := 'Stop Client !';
           Tag := 1;
           Edt_Port.Enabled:= False;
           Edt_Host.Enabled:= False;
      end;
      1: begin
           Client_Sock.Active := False;
           Caption := 'Start Client';
           Tag := 0;
           Edt_Port.Enabled:= True;
           Edt_Host.Enabled:= True;
      end;
    end;
   end;
end;

procedure TUMain.Client_SockConnect(Sender: TObject; Socket: TCustomWinSocket);
begin
  StatusBar_APP.Panels.Items[1].Text := 'Client is Activated ,Connections on the IP: ' +Socket.RemoteAddress ;
end;

procedure TUMain.Client_SockConnecting(Sender: TObject;
  Socket: TCustomWinSocket);
begin
  StatusBar_APP.Panels.Items[1].Text := 'Connecting...';
end;

procedure TUMain.Client_SockDisconnect(Sender: TObject;
  Socket: TCustomWinSocket);
begin
  StatusBar_APP.Panels.Items[1].Text := 'Client is Stopped';
end;

procedure TUMain.Client_SockError(Sender: TObject; Socket: TCustomWinSocket;
  ErrorEvent: TErrorEvent; var ErrorCode: Integer);
begin
  ErrorCode := 0;
  StatusBar_APP.Panels.Items[1].Text := 'Connection Error !!';
  Btn_Start.Caption := 'Client Server';
  Edt_Port.Enabled:= True;
  Edt_Host.Enabled:= True;
  Btn_Start.Tag := 0;
end;

procedure TUMain.Client_SockRead(Sender: TObject; Socket: TCustomWinSocket);
var  StrCommand : string;
begin
  StrCommand := Socket.ReceiveText;
//=======
  if StrCommand = '1' then
  begin
    Client_Sock.Active := False;
  end;

end;



end.
